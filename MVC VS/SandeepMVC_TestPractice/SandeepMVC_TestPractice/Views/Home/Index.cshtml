@model IEnumerable<SandeepMVC_TestPractice.Models.DbContext.Registration>

@*@model IPagedList<SandeepMVC_TestPractice.Models.DbContext.Registration>

    @using PagedList;

    @using PagedList.Mvc;*@

@*@model IPagedList<SandeepMVC_TestPractice.Models.DbContext.Registration>*@

@*@model PagedList.IPagedList<SandeepMVC_TestPractice.Models.DbContext.Registration>
    @using PagedList;*@

@{
    ViewBag.Title = "Index";
}

<style>
    table {
        width: 100%;
    }

        table tr td {
            border: 2px solid black;
            text-align: center;
            word-wrap: break-word;
        }

        table tr:hover {
            background-color: #e5e0e0;
            color: #fff;
        }

        table tr th {
            border: 2px solid black;
            text-align: center;
            background-color: #fff;
            color: #000;
        }
</style>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@*@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    //the following are search options

    <b>Search Option:</b>
    @Html.RadioButton("option", "Name")<text>Name</text>

    @Html.RadioButton("option", "Gender")<text> Gender </text>

    @Html.RadioButton("option", "Email")<text>Email</text>

    @Html.TextBox("search")
    <input type="submit" name="submit" value="Search" />

}*@

<table class="table">

    @*<tr>
            <th>
                @Html.ActionLink("FirstName", "Index",
                new { sortOrder = "FirstName", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("LastName", "Index",
                new { sortOrder = "LastName", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Email", "Index",
                new { sortOrder = "Email", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Password", "Index",
                new { sortOrder = "Password", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("DOB", "Index",
                new { sortOrder = "DOB", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Address", "Index",
                new { sortOrder = "Address", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("CountryId", "Index",
                new { sortOrder = "CountryId", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("StateId", "Index",
                new { sortOrder = "StateId", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("CityId", "Index",
                new { sortOrder = "CityId", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("ProfilePic", "Index",
                new { sortOrder = "ProfilePic", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("AttachmentDoc", "Index",
                new { sortOrder = "AttachmentDoc", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Gender", "Index",
                new { sortOrder = "Gender", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th>
                @Html.ActionLink("Hobbies", "Index",
                new { sortOrder = "Hobbies", CurrentSort = ViewBag.CurrentSort })
            </th>
        </tr>*@


    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Password)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CountryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StateId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CityId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProfilePic)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AttachmentDoc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Hobbies)
        </th>
        <th></th>
    </tr>



    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3">
                Records not found
            </td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.CountryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StateId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CityId)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.ProfilePic)*@
                    <img src="@Url.Content(item.ProfilePic)" />

                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.AttachmentDoc)*@
                    <button class="btn btn-primary"><a href="@Url.Content(item.AttachmentDoc)" target="_blank" style="color:white">Link of File</a></button>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hobbies)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", "AuthController", new { id = item.id }) |*@
                    <a href='@Url.Action("Edit", "Auth", new { id = item.id })'>Edit</a>
                    @*@Html.ActionLink("Details", "index", "AuthController", new { id = item.id }) |*@
                    <a href='@Url.Action("index", "Auth", new { id = item.id })'>Details</a>
                    @*@Html.ActionLink("Delete", "Delete","Auth" ,new { id=item.id })*@
                    <a href='@Url.Action("Delete", "Auth", new { id = item.id })'>Delete</a>


                </td>
            </tr>
        }
    }


</table>

@*@Html.PagedListPager(Model, pageNumber => Url.Action("Index", new
    {
        pageNumber,
        option = Request.QueryString["option"],
        search = Request.QueryString["search"],
        sort = Request.QueryString["sort"]
    }))*@


@*<br />
    <div id='Paging' style="text-align:center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>*@


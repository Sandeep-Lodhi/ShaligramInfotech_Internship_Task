@model DBModels.UserModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Database"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <h4>UserModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(x => x.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(o => o.UserTypeId, ViewBag.userType as SelectList,"---Select---",  new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.UserType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(x => x.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(o => o.CountryId, ViewBag.country as SelectList, "---Select---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.UserType, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div>
        @Html.LabelFor(x => x.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(o => o.StateyId, ViewBag.state as SelectList, "---Select---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.UserType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(x => x.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(o => o.CityId, ViewBag.city as SelectList, "---Select---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.UserType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

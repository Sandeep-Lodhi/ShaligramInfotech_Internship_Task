@model Sandeep_Bootstrappractice.Models.Models.RegistrationModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm("Register", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="background-color:salmon">
        <h4>RegistrationModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RePassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RePassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, new SelectList(""), "--Slect Country Name--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StateId, new SelectList(""), "--Slect State Name--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, new SelectList(""), "--Slect City Name--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Image" class="form-control" accept=".jpg,.png" />
                @*@Html.EditorFor(model => model.Image.FileName, new { htmlAttributes = new { @class = "form-control" ,type="file"} })*@
                @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttachmentDoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Document" class="form-control" />
                @*@Html.EditorFor(model => model.Document, new { htmlAttributes = new { @class = "form-control", type = "file" } })*@
                @Html.ValidationMessageFor(model => model.AttachmentDoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })&nbsp; Male &nbsp; &nbsp;
                @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } }) &nbsp;Female
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Hobbies, new { htmlAttributes = new { id = "Hobbies" } })
            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="checkbox" id="w" value="Vloging" onchange="GetValue()" /> &nbsp; Bloging &nbsp; &nbsp;
            <input type="checkbox" id="r" value="Arts" onchange="GetValue()" /> &nbsp; Arts &nbsp; &nbsp;

            <input type="checkbox" value="Vloging" onchange="GetValue()" /> &nbsp; Singing &nbsp; &nbsp;
            <input type="checkbox" value="Arts" onchange="GetValue()" /> &nbsp; Cricket &nbsp; &nbsp;

            @Html.ValidationMessageFor(model => model.Hobbies)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script>

    $(document).ready(function () {



        $("#CountryId").append(`<option value="0" id="0"></option>`)
        $("#StateId").append(`<option value="0" id="0"></option>`)
        $("#CityId").append(`<option value="0" id="0"></option`)
        $.ajax({
            url: '/Home/GetCountry',
            dataType: 'json',
            success: function (data) {
                let list = JSON.parse(data);
                console.log(list);
                list.forEach(ele => {
                    $("#CountryId").append(`<option value="${ele.id}" id="${ele.id}">${ele.CountryName}</option>`)
                })
            },
            error: function (data) {
                alert('error');
            }
        })
    })




    $("#CountryId").change(function () {
        $("#StateId").empty();

        $("#StateId").append(`<option value="0" id="0">Select state</option>`)
        $("#CityId").empty();
        $("#CityId").append(`<option value="0" id="0">Select city</option`)
        let cid = $("#CountryId").val()
        $.ajax({
            url: '/Home/GetState',
            data: { id: cid },
            dataType: 'json',
            success: function (data) {
                console.log(data);


                let list = JSON.parse(data);
                console.log(list);
                list.forEach(ele => {



                    $("#StateId").append(`<option value="${ele.id}" id="${ele.id}">${ele.StateName}</option>`)
                })
            },
            error: function (data) {
                alert('error');
            }
        })



    })
    $("#StateId").click(function () {
        $("#CityId").empty();
        $("#CityId").append(`<option value="0" id="0">Select city</option`)
        let sid = $("#StateId").val()
        $.ajax({
            url: '/Home/GetCity',
            data: { id: sid },
            dataType: 'json',
            success: function (data) {

                console.log(data);

                let list = JSON.parse(data);
                console.log(list);
                list.forEach(ele => {
                    $("#CityId").append(`<option value="${ele.id}" id="${ele.id}">${ele.CityName}</option>`)
                })
            },
            error: function (data) {
                alert('error');
            }
        })
    });


    function GetValue() {
        var sandi = "";
        $('input[type=checkbox]').each(function () {
            if (this.checked) {
                sandi += this.value + ",";
            }
        });
        $("#Hobbies").val(sandi);
    }
</script>